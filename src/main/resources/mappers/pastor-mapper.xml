<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.healingchurch.story.services.story.pastor.PastorStoryMapper">
    <select id="findStoryList" parameterType="net.healingchurch.story.domain.PastorStory" resultType="net.healingchurch.story.domain.PastorStory">
        /*  PastorStoryMapper.findStoryList  */
        select
             A.story_id
            ,A.pastor_id
            ,A.visit_user_id
            ,FN_DATE_FORMAT(A.visit_date) as visit_date
            ,A.visit_place
            ,A.summary
            ,A.prayers
            ,A.etc
            ,FN_DATE_FORMAT(A.create_date) as visit_date
            ,FN_DATE_FORMAT(A.update_date) as visit_date
            ,B.user_name
        from ch_story_pastor A
        left join ch_user B on A.pastor_id = B.user_id

        where 1=1

            and A.visit_user_id = #{visitUserId}
        <if test="pastorId!=null and pastorId!=''">
            and A.pastor_id = #{pastorId}
        </if>

        <if test="fromDate!=null and fromDate!=''">
            and DATE_FORMAT(A.visit_date, '%Y%m%d')<![CDATA[ >= ]]> #{fromDate}
        </if>
        <if test="toDate!=null and toDate!=''">
            and DATE_FORMAT(A.visit_date, '%Y%m%d')<![CDATA[ <= ]]>  #{toDate}
        </if>

        order by A.visit_date desc, A.pastor_id

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="findStoryListCnt" parameterType="net.healingchurch.story.domain.PastorStory" resultType="int">
        /*  PastorStoryMapper.findStoryListCnt  */
        select
          count(A.story_id) AS cnt
        from ch_story_pastor A
        left join ch_user B on A.pastor_id = B.user_id

        where 1=1

        and A.visit_user_id = #{visitUserId}
        <if test="pastorId!=null and pastorId!=''">
            and A.pastor_id = #{pastorId}
        </if>

        <if test="fromDate!=null and fromDate!=''">
            and DATE_FORMAT(A.visit_date, '%Y%m%d')<![CDATA[ >= ]]> #{fromDate}
        </if>
        <if test="toDate!=null and toDate!=''">
            and DATE_FORMAT(A.visit_date, '%Y%m%d')<![CDATA[ <= ]]>  #{toDate}
        </if>

        order by A.visit_date desc, A.pastor_id

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="getStory" resultType="net.healingchurch.story.domain.PastorStory" parameterType="int">
        /*  PastorStoryMapper.getStory  */
        select * from ch_story_pastor
        where story_id = #{value}
    </select>

    <insert id="createStory" parameterType="net.healingchurch.story.domain.PastorStory"
            useGeneratedKeys="true" keyProperty="storyId">
        /*  PastorStoryMapper.createStory  */
        insert into ch_story_pastor (pastor_id, visit_user_id, visit_date, visit_place, summary, prayers, etc, create_date, create_user)
        VALUES
        (
            #{pastorId},
            #{visitUserId},
            STR_TO_DATE(#{visitDate}, '%Y%m%d'),
            #{visitPlace},
            #{summary},
            #{prayers},
            #{etc},
            now(),
            #{loginUserId}
        )
    </insert>

    <update id="updateStory" parameterType="net.healingchurch.story.domain.PastorStory"
            useGeneratedKeys="true" keyProperty="storyId">
        /*  PastorStoryMapper.updateStory  */
        update ch_story_pastor
        set
             visit_place = #{visitPlace}
            ,summary = #{summary}
            ,prayers = #{prayers}
            ,etc = #{etc}
            ,update_date = now()
            ,update_user = #{loginUserId}
        where story_id = #{storyId}
    </update>

    <delete id="removeStory" parameterType="int">
        /*  PastorStoryMapper.removeStory  */
        delete from ch_story_pastor
        where story_id = #{value}
    </delete>

    <select id="findUserStoryList" parameterType="net.healingchurch.story.domain.PastorStory"
            resultType="net.healingchurch.story.domain.PastorStory">
        /*  PastorStoryMapper.findUserStoryList  */
        select
         A.user_seq
        ,A.user_id
        ,A.role_id
        ,A.group_id
        ,A.user_name
        ,A.is_admin
        ,A.birth_date
        ,A.address
        ,A.mobile
        ,A.email
        ,A.reg_date
        ,A.alpha_date
        ,A.pasture_join_date
        ,A.status
        ,A.is_permission
        ,B.group_name as group_desc
        ,C.description as role_desc
        <if test="visitDate!='' and visitDate!=null">
            ,D.story_id
            ,D.pastor_id
            ,D.visit_user_id
            ,D.visit_date
        </if>
        from ch_user A
        inner join (select  	X.group_id,
        X.group_name,
        X.parent_group_id
        from    (select * from ch_user_group
        order by parent_group_id, group_id) X,
        (select @pv := #{groupId}) Y
        where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
        and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
        left join ch_user_role C on C.role_id = A.role_id
        <if test="visitDate!='' and visitDate!=null">
            left join ch_story_pastor D on D.visit_user_id = A.user_id and D.pastor_id = #{pastorId} and DATE_FORMAT(D.visit_date, '%Y%m%d')  = #{visitDate}
        </if>
        where 1=1
        and C.role_id not in (1, 2) /*   관리자, 목회자 제외  */

        <if test="roleId!='' and roleId!=null">and C.role_id = #{roleId}</if>
        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>

        order by A.user_name

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="findUserStoryListCnt" parameterType="net.healingchurch.story.domain.PastorStory"
            resultType="int">
        /*  PastorStoryMapper.findUserStoryListCnt  */
        select
        count(A.user_id) AS cnt
        from ch_user A
        inner join (select  	X.group_id,
        X.group_name,
        X.parent_group_id
        from    (select * from ch_user_group
        order by parent_group_id, group_id) X,
        (select @pv := #{groupId}) Y
        where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
        and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
        left join ch_user_role C on C.role_id = A.role_id
        <if test="visitDate!='' and visitDate!=null">
            left join ch_story_pastor D on D.visit_user_id = A.user_id and D.pastor_id = #{pastorId} and DATE_FORMAT(D.visit_date, '%Y%m%d')  = #{visitDate}
        </if>
        where 1=1
        and C.role_id not in (1, 2) /*   관리자, 목회자 제외  */

        <if test="roleId!='' and roleId!=null">and C.role_id = #{roleId}</if>
        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>
    </select>
</mapper>
