<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.healingchurch.story.services.story.town.TownStoryMapper">
    <select id="findStoryList" parameterType="net.healingchurch.story.domain.TownStory" resultType="net.healingchurch.story.domain.TownStory">
        /*  TownStoryMapper.findStoryList  */
        select
        A.user_name
        ,A.group_id
        ,B.parent_group_id
        ,C.story_id
        ,C.user_id
        ,C.group_id
        ,FN_DATE_FORMAT(C.input_date) as input_date
        ,C.worship_yn
        ,C.leader_yn
        ,C.pasture_meet_yn
        ,C.bible_count
        ,C.qt_count
        ,C.friday_worship_yn
        ,C.dawn_pray_count
        ,C.etc
        ,FN_DATE_FORMAT(C.create_date) as create_date
        ,FN_DATE_FORMAT(C.update_date) as update_date
        ,D.*
        ,count(E.user_id) as user_cnt

        from ch_user A
        left join ch_user_group B on B.group_id = A.group_id
        left join ch_story_master C on C.user_id = A.group_id and DATE_FORMAT(C.input_date, '%Y%m%d') = #{inputDate}
        left join ch_story_town D on C.story_id = D.master_id
        left join ch_user E  on E.group_id = A.group_id

        where 1=1
        and A.role_id = 4
        and B.parent_group_id = #{groupId}

        group by A.group_id
        order by A.user_name

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="findStorySumList" parameterType="net.healingchurch.story.domain.TownStory" resultType="net.healingchurch.story.domain.TownStory">
        /*  TownStoryMapper.findStorySumList  */
        select
             t.user_name
            ,t.story_id
            ,t.group_id
            ,t.user_id
            ,sum(t.worship_yn) as worship_yn
            ,sum(t.leader_yn) as leader_yn
            ,sum(t.pasture_meet_yn) as pasture_meet_yn
            ,sum(t.bible_count) as bible_count
            ,sum(t.qt_count) as qt_count
            ,sum(t.friday_worship_yn) as friday_worship_yn
            ,sum(t.dawn_pray_count) as dawn_pray_count
            ,t.user_cnt
        from(
            select
                 A.user_name
                ,C.story_id
                ,C.group_id
                ,C.user_id
                ,FN_DATE_FORMAT(C.input_date) as input_date
                ,C.worship_yn
                ,C.leader_yn
                ,C.pasture_meet_yn
                ,C.bible_count
                ,C.qt_count
                ,C.friday_worship_yn
                ,C.dawn_pray_count
                ,C.etc
                ,count(E.user_id) as user_cnt
            from ch_user A
            left join ch_user_group B on B.group_id = A.group_id
            left join ch_story_master C on C.user_id = A.group_id and DATE_FORMAT(C.input_date, '%Y%m%d')<![CDATA[ >= ]]> #{fromDate} and DATE_FORMAT(C.input_date, '%Y%m%d')<![CDATA[ <= ]]>  #{toDate}
            left join ch_user E  on E.group_id = A.group_id

            where 1=1
            and A.role_id = 4
            and B.parent_group_id = #{groupId}

            group by A.group_id, C.input_date
            order by A.user_name) t

        group by t.user_id
        order by t.user_name
    </select>

    <select id="findStoryCareList" parameterType="net.healingchurch.story.domain.TownStory" resultType="net.healingchurch.story.domain.TownStory">
        /*  TownStoryMapper.findStoryCareList  */
        select
             FN_DATE_FORMAT(A.input_date) as input_date
            ,B.*
            ,C.user_name

        from ch_story_master A
        inner join ch_story_town B on A.story_id = B.master_id
        left join ch_user C  on A.user_id = C.group_id and C.role_id = 4

        where 1=1
        and A.group_id = #{groupId}
        and A.user_id = #{userId}
        and DATE_FORMAT(A.input_date, '%Y%m%d')<![CDATA[ >= ]]> #{fromDate}
        and DATE_FORMAT(A.input_date, '%Y%m%d')<![CDATA[ <= ]]>  #{toDate}

        group by B.master_id
        order by A.input_date desc
    </select>

    <select id="getStory" resultType="net.healingchurch.story.domain.TownStory" parameterType="int">
        /*  TownStoryMapper.getStory  */
        select
        A.*,
        B.leader_care_story, B.pasture_care_story, B.town_story_id
        from ch_story_master A
        inner join ch_story_town B
        on A.story_id = B.master_id
        where A.story_id = #{value}
    </select>

    <select id="getStoryByGroup" resultType="net.healingchurch.story.domain.TownStory" parameterType="net.healingchurch.story.domain.TownStory">
        /*  TownStoryMapper.getStoryByGroup  */
        select
        A.*
        from ch_story_master A
        where A.group_id = #{groupId}
        and A.user_id = #{userId}
        and A.input_date = #{inputDate}

    </select>

    <insert id="createStorySum" parameterType="net.healingchurch.story.domain.TownStory"
            useGeneratedKeys="true" keyProperty="storyId">
        /*  TownStoryMapper.createStorySum  */
        insert into ch_story_master
        (user_id, group_id, worship_yn, leader_yn, pasture_meet_yn, bible_count,
        qt_count, friday_worship_yn, dawn_pray_count, etc, input_date, create_date)
        select
             #{userId} as user_id
            ,#{groupId} as group_id
            ,Ifnull(sum(A.worship_yn), 0) as worship_yn
            ,Ifnull(sum(A.leader_yn), 0) as leader_yn
            ,Ifnull(sum(A.pasture_meet_yn), 0) as pasture_meet_yn
            ,Ifnull(sum(A.bible_count), 0) as bible_count
            ,Ifnull(sum(A.qt_count), 0) as qt_count
            ,Ifnull(sum(A.friday_worship_yn), 0) as friday_worship_yn
            ,Ifnull(sum(A.dawn_pray_count), 0) as dawn_pray_count
            ,'' as etc
            ,STR_TO_DATE(#{inputDate}, '%Y%m%d') as input_date
            ,now() as create_date
        from ch_story_master A
        inner join ch_story_pasture B on A.story_id = B.master_id
        where A.group_id = #{userId}
        and DATE_FORMAT(A.input_date, '%Y%m%d')  = #{inputDate};
    </insert>

    <insert id="createStory" parameterType="net.healingchurch.story.domain.TownStory"
            useGeneratedKeys="true" keyProperty="townStoryId">
        /*  TownStoryMapper.createStory  */
        insert into ch_story_town
        (master_id, leader_care_story, pasture_care_story, create_user)
        VALUES
        (
            #{storyId},
            #{leaderCareStory},
            #{pastureCareStory},
            #{loginUserId}
        );
    </insert>

    <update id="updateStorySum" parameterType="net.healingchurch.story.domain.TownStory"
            useGeneratedKeys="true" keyProperty="storyId">
        /*  TownStoryMapper.updateStorySum  */
        update ch_story_master as A,
                (select
                     #{storyId} as story_id
                    ,Ifnull(sum(A.worship_yn), 0) as worship_yn
                    ,Ifnull(sum(A.leader_yn), 0) as leader_yn
                    ,Ifnull(sum(A.pasture_meet_yn), 0) as pasture_meet_yn
                    ,Ifnull(sum(A.bible_count), 0) as bible_count
                    ,Ifnull(sum(A.qt_count), 0) as qt_count
                    ,Ifnull(sum(A.friday_worship_yn), 0) as friday_worship_yn
                    ,Ifnull(sum(A.dawn_pray_count), 0) as dawn_pray_count
                    ,'' as etc
                    ,now() as update_date
                from ch_story_master A
                inner join ch_story_pasture B on A.story_id = B.master_id
                where A.group_id = #{userId}
                and A.input_date  = #{inputDate}) as B
        set
             A.worship_yn       = B.worship_yn
            ,A.leader_yn        = B.leader_yn
            ,A.pasture_meet_yn  = B.pasture_meet_yn
            ,A.bible_count      = B.bible_count
            ,A.qt_count         = B.qt_count
            ,A.friday_worship_yn = B.friday_worship_yn
            ,A.dawn_pray_count  = B.dawn_pray_count
            ,A.etc              = B.etc
            ,A.update_date      = B.update_date
        where A.story_id = B.story_id;
    </update>

    <update id="updateStory" parameterType="net.healingchurch.story.domain.TownStory"
            useGeneratedKeys="true" keyProperty="storyId">
        /*  TownStoryMapper.updateStory  */
        update ch_story_town
        set

        leader_care_story = #{leaderCareStory},
        pasture_care_story = #{pastureCareStory},
        update_user = #{loginUserId}

        where master_id = #{storyId};
    </update>

    <delete id="removeStory" parameterType="int">
        /*  TownStoryMapper.removeStory  */
        delete from ch_story_town
        where master_id = #{value};
    </delete>

    <select id="findUserStoryList" parameterType="net.healingchurch.story.domain.TownStory"
            resultType="net.healingchurch.story.domain.TownStory">
        /*  TownStoryMapper.findUserStoryList  */
        select
        A.user_seq
        ,A.user_id
        ,A.role_id
        ,B.parent_group_id AS group_id
        ,A.user_name
        ,A.is_admin
        ,A.birth_date
        ,A.address
        ,A.mobile
        ,A.email
        ,A.reg_date
        ,A.alpha_date
        ,A.pasture_join_date
        ,A.status
        ,A.is_permission
        ,FN_GROUP_DESC(A.group_id) as group_desc
        ,C.description as role_desc
        <if test="inputDate!='' and inputDate!=null">
            ,D.event_id
            ,E.town_story_id
        </if>
        from ch_user A
        inner join (select  	X.group_id,
        X.group_name,
        X.parent_group_id
        from    (select * from ch_user_group
        order by parent_group_id, group_id) X,
        (select @pv := #{groupId}) Y
        where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
        and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
        left join ch_user_role C on C.role_id = A.role_id
        <if test="inputDate!='' and inputDate!=null">
            left join ch_event D on D.group_id = B.parent_group_id and DATE_FORMAT(D.event_date, '%Y%m%d')  = #{inputDate}
            left join (select
            X.group_id
            ,Y.town_story_id
            from ch_story_master X
            inner join ch_story_town Y on X.story_id = Y.master_id
            where DATE_FORMAT(X.input_date, '%Y%m%d') = #{inputDate}
            GROUP BY X.group_id) E on E.group_id = B.parent_group_id
        </if>
        where 1=1

        and C.role_id = 3   /*   마을 목자만  */

        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>

        order by A.user_name

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="findUserStoryListCnt" parameterType="net.healingchurch.story.domain.TownStory"
            resultType="int">
        /*  TownStoryMapper.findUserStoryListCnt  */
        select
        count(A.user_id) AS cnt
        from ch_user A
        inner join (select  	X.group_id,
        X.group_name,
        X.parent_group_id
        from    (select * from ch_user_group
        order by parent_group_id, group_id) X,
        (select @pv := #{groupId}) Y
        where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
        and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
        left join ch_user_role C on C.role_id = A.role_id
        <if test="inputDate!='' and inputDate!=null">
            left join ch_event D on D.group_id = B.parent_group_id and DATE_FORMAT(D.event_date, '%Y%m%d')  = #{inputDate}
            left join (select
            X.group_id
            ,Y.town_story_id
            from ch_story_master X
            inner join ch_story_town Y on X.story_id = Y.master_id
            where DATE_FORMAT(X.input_date, '%Y%m%d') = #{inputDate}
            GROUP BY X.group_id) E on E.group_id = B.parent_group_id
        </if>
        where 1=1

        and C.role_id = 3   /*   마을 목자만  */

        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>
    </select>
</mapper>