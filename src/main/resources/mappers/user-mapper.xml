<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.healingchurch.story.services.user.UserMapper">
    <select id="findUserList" parameterType="net.healingchurch.story.domain.User"
            resultType="net.healingchurch.story.domain.User">
        /*  UserMapper.findUserList  */
        select
        A.user_seq
        ,A.user_id
        ,A.password
        ,A.role_id
        ,A.group_id
        ,A.user_name
        ,A.is_admin

        ,A.address
        ,A.mobile
        ,A.email
        ,FN_DATE_FORMAT(A.birth_date) as birth_date
        ,FN_DATE_FORMAT(A.reg_date) as reg_date
        ,FN_DATE_FORMAT(A.alpha_date) as alpha_date
        ,FN_DATE_FORMAT(A.pasture_join_date) as pasture_join_date
        ,A.status
        ,A.is_permission
        ,FN_DATE_FORMAT(A.create_date) as create_date
        ,FN_DATE_FORMAT(A.update_date) as update_date
        ,B.parent_group_id
        ,FN_GROUP_DESC(A.group_id) as group_desc
        ,C.description as role_desc
        ,C.role_order
        from ch_user A
        <choose>
            <when test="groupId!='' and groupId!=null">
                inner join (select  	X.group_id,
                X.group_name,
                X.parent_group_id
                from    (select * from ch_user_group
                order by parent_group_id, group_id) X,
                (select @pv := #{groupId}) Y
                where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
                and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
            </when>
            <otherwise>
                left join ch_user_group B on B.group_id = A.group_id
            </otherwise>
        </choose>
        left join ch_user_role C on C.role_id = A.role_id
        where 1=1

        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="roleId!='' and roleId!=null">and A.role_id = #{roleId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>
        <if test="isAdmin!='' and isAdmin!=null">and A.is_admin = #{isAdmin} </if>
        <if test="alphaDate!='' and alphaDate!=null">and and DATE_FORMAT(A.alpha_date, '%Y%m%d') = STR_TO_DATE(#{alphaDate}, '%Y%m')</if>
        <if test="pastureJoinDate!='' and pastureJoinDate!=null">and DATE_FORMAT(A.pasture_join_date, '%Y%m') = STR_TO_DATE(#{pastureJoinDate}, '%Y%m')</if>
        <if test="isPermission!='' and isPermission!=null">and A.is_permission = #{isPermission} </if>
        <if test="status!='' and status!=null">and A.status = #{status} </if>
        <if test="birthDate!='' and birthDate!=null">and DATE_FORMAT(A.birth_date, '%Y%m') = STR_TO_DATE(#{birthDate}, '%Y%m')</if>

        order by A.user_name

        <if test="page!=null and page!=''">LIMIT #{offset}, #{limit}</if>
    </select>

    <select id="findUserListCnt" parameterType="net.healingchurch.story.domain.User"
            resultType="int">
        /*  UserMapper.findUserListCnt  */
        select
        count(A.user_id) AS cnt
        from ch_user A
        <choose>
            <when test="groupId!='' and groupId!=null">
                inner join (select  	X.group_id,
                X.group_name,
                X.parent_group_id
                from    (select * from ch_user_group
                order by parent_group_id, group_id) X,
                (select @pv := #{groupId}) Y
                where   (find_in_set(X.parent_group_id, @pv) > 0 OR find_in_set(group_id, @pv) > 0)
                and     @pv := concat(@pv, ',', X.group_id)) B on B.group_id = A.group_id
            </when>
            <otherwise>
                left join ch_user_group B on B.group_id = A.group_id
            </otherwise>
        </choose>
        left join ch_user_role C on C.role_id = A.role_id
        where 1=1

        <if test="userId!='' and userId!=null">and A.user_id = #{userId}</if>
        <if test="roleId!='' and roleId!=null">and A.role_id = #{roleId}</if>
        <if test="userName!='' and userName!=null">and A.user_name like concat('%', #{userName}, '%')</if>
        <if test="isAdmin!='' and isAdmin!=null">and A.is_admin = #{isAdmin} </if>
        <if test="alphaDate!='' and alphaDate!=null">and and DATE_FORMAT(A.alpha_date, '%Y%m%d') = STR_TO_DATE(#{alphaDate}, '%Y%m')</if>
        <if test="pastureJoinDate!='' and pastureJoinDate!=null">and DATE_FORMAT(A.pasture_join_date, '%Y%m') = STR_TO_DATE(#{pastureJoinDate}, '%Y%m')</if>
        <if test="isPermission!='' and isPermission!=null">and A.is_permission = #{isPermission} </if>
        <if test="status!='' and status!=null">and A.status = #{status} </if>
        <if test="birthDate!='' and birthDate!=null">and DATE_FORMAT(A.birth_date, '%Y%m') = STR_TO_DATE(#{birthDate}, '%Y%m')</if>

    </select>

    <select id="findUserById" parameterType="string" resultType="net.healingchurch.story.domain.User">
        /*  UserMapper.findUserById  */
        select
             A.user_seq
            ,A.user_id
            ,A.password
            ,A.role_id
            ,A.group_id
            ,A.user_name
            ,A.is_admin

            ,A.address
            ,A.mobile
            ,A.email
            ,FN_DATE_FORMAT(A.birth_date) as birth_date
            ,FN_DATE_FORMAT(A.reg_date) as reg_date
            ,FN_DATE_FORMAT(A.alpha_date) as alpha_date
            ,FN_DATE_FORMAT(A.pasture_join_date) as pasture_join_date
            ,A.status
            ,A.is_permission
            ,FN_DATE_FORMAT(A.create_date) as create_date
            ,FN_DATE_FORMAT(A.update_date) as update_date
            ,B.parent_group_id
            ,B.group_name as group_desc
            ,C.description as role_desc
            ,C.role_order
        from ch_user A
        left join ch_user_group B on B.group_id = A.group_id
        left join ch_user_role C on C.role_id = A.role_id
        where A.user_id = #{value}
    </select>

    <select id="findUserRoleList" parameterType="string"
            resultType="net.healingchurch.story.domain.Role">
        /*  UserMapper.findUserRoleList  */
        select
             A.role_id
            ,A.role_name
            ,A.description
            ,A.role_order
            ,FN_DATE_FORMAT(A.create_date) as create_date
            ,FN_DATE_FORMAT(A.update_date) as update_date
        from ch_user_role A
        left join ch_user B on A.role_id = B.role_id

        where B.user_id=#{value}
    </select>

    <insert id="createUser" parameterType="net.healingchurch.story.domain.User"
            useGeneratedKeys="true" keyProperty="userSeq">
        /*  UserMapper.createUser  */
        INSERT INTO ch_user(user_id, password, role_id, group_id, user_name, is_admin, address, mobile, email,
        <if test="birthDate!='' and birthDate!=null">birth_date,</if>
        <if test="regDate!='' and regDate!=null">reg_date,</if>
        <if test="alphaDate!='' and alphaDate!=null">alpha_date,</if>
        <if test="pastureJoinDate!='' and regDate!=null">pasture_join_date,</if>
        is_permission,
        status,
        create_date,
        create_user)
        VALUES (
        CONCAT('ch_', (select * from (select MAX(user_seq)+1 from ch_user) tmp)),
        #{password},
        #{roleId},
        #{groupId},
        #{userName},
        #{isAdmin},
        #{address},
        #{mobile},
        #{email},
        <if test="birthDate!='' and birthDate!=null">STR_TO_DATE(#{birthDate}, '%Y%m%d'),</if>
        <if test="regDate!='' and regDate!=null">STR_TO_DATE(#{regDate}, '%Y%m%d'),</if>
        <if test="alphaDate!='' and alphaDate!=null">STR_TO_DATE(#{alphaDate}, '%Y%m%d'),</if>
        <if test="pastureJoinDate!='' and pastureJoinDate!=null">STR_TO_DATE(#{pastureJoinDate}, '%Y%m%d'),</if>
        #{isPermission},
        #{status},
        now(),
        #{loginUserId}
        )
    </insert>

    <update id="updateUser" parameterType="net.healingchurch.story.domain.User"
            useGeneratedKeys="true" keyProperty="userId">
        /*  UserMapper.updateUser  */
        update ch_user
        set
        <choose>
            <when test="password!='' and password!=null">
                password = #{password}
                ,update_date = now()
                ,update_user = #{loginUserId}
            </when>
            <otherwise>
                is_admin = #{isAdmin}
                ,is_permission = #{isPermission}
                ,status = #{status}
                ,update_date = now()
                ,update_user = #{loginUserId}
                <if test="userName!='' and userName!=null">,user_name = #{userName}</if>
                <if test="roleId!='' and roleId!=null">,role_id = #{roleId}</if>
                <if test="groupId!='' and groupId!=null">,group_id = #{groupId}</if>
                <if test="address!='' and address!=null">,address = #{address}</if>
                <if test="mobile!='' and mobile!=null">,mobile = #{mobile}</if>
                <if test="email!='' and email!=null">,email = #{email}</if>
                <if test="birthDate!='' and birthDate!=null">,birth_date = STR_TO_DATE(#{birthDate}, '%Y%m%d')</if>
                <if test="regDate!='' and regDate!=null">,reg_date = STR_TO_DATE(#{regDate}, '%Y%m%d')</if>
                <if test="alphaDate!='' and alphaDate!=null">,alpha_date = STR_TO_DATE(#{alphaDate}, '%Y%m%d')</if>
                <if test="pastureJoinDate!='' and pastureJoinDate!=null">,pasture_join_date = STR_TO_DATE(#{pastureJoinDate}, '%Y%m%d')</if>
            </otherwise>
        </choose>
        where user_id = #{userId}
    </update>

    <delete id="removeUser" parameterType="string">
        /*  UserMapper.removeUser  */
        delete from ch_user
        where user_id = #{value}
    </delete>

</mapper>